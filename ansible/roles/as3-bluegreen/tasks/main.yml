# Create or update Application Service and BlueGreen iRule and configuration in one declaration

- name: Create iRuleName variable
  set_fact:
    iRuleName: "{{partition}}_bluegreen_irule"

- name: Create dataGroup variable
  set_fact:
    dataGroup: "{{partition}}_bluegreen_datagroup"

- name: Create tmp directory
  file:
    path: "{{role_path}}/files/tmp/"
    state: directory

- name: Transform iRule template
  template: src="{{role_path}}/files/bluegreen-irule-template.tcl" dest="{{role_path}}/files/tmp/{{partition}}_irule.tcl"

- name: Base64 encode iRule
  shell: cat {{role_path}}/files/tmp/{{partition}}_irule.tcl
  register: iRuleResult

- name: Assign iRule to variable
  set_fact:
    iRuleResultB64: "{{ iRuleResult.stdout | b64encode }}"

- name: Get BIG-IP Authentication Token from {{ bigip_provider.server }}
  uri:
    body: '{"username":"{{ bigip_provider.user}}","password":"{{ bigip_provider.password}}","loginProviderName":"tmos"}'
    body_format: json
    method: POST
    url: "https://{{ bigip_provider.server }}/mgmt/shared/authn/login"
    status_code: 200
    validate_certs: "{{ bigip_provider.validate_certs }}"
  register: bigip_auth_response
  retries: 30
  delay: 5
  until: "(bigip_auth_response is successful) and (bigip_auth_response.status == 200)"

- name: Validate AS3 rest worker is ready
  uri:
    headers:
      X-F5-Auth-Token: "{{ bigip_auth_response.json.token.token }}"
    method: GET
    url: "https://{{ bigip_provider.server }}/mgmt/shared/appsvcs/available"
    validate_certs: "{{ bigip_provider.validate_certs }}"
  retries: 30
  delay: 5
  register: result
  until: "(result is successful) and (result.status == 200)"

- name: Prepare the AS3 declaration
  template: src="{{role_path}}/files/as3-bluegreen-declaration.json" dest="{{role_path}}/files/tmp/{{partition}}_declaration.json"
  delegate_to: localhost

- name: Create or update HTTP services in one declaration
  bigip_appsvcs_extension:
    content: "{{ lookup('file','{{role_path}}/files/tmp/' + '{{partition}}_declaration.json') }}"
    state: present
    provider: "{{ bigip_provider }}"
  delegate_to: localhost